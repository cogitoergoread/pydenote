[project]
name = "pydenote"
description = "Utilities for Denote naming scheme notes."
authors = [
    {name = "Joozsef Varga", email = "joozsef@ho.me"},
]
dependencies = []
requires-python = ">=3.13"
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]


[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"


[dependency-groups]
lint = [
    "ruff>=0.8.4",
    "pre-commit>=4.0.1",
    "mypy>=1.14.0",
]
pytest = [
    "pytest-cov>=6.0.0",
]

[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle - Error
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle - Warning
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "W191", # tab-indentation
]
include = ["**/*.py", "**/*.pyi", "**/pyproject.toml"]
[tool.ruff.pydocstyle]
convention = "google"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "scm"

[tool.pytest.ini_options]
log_level = "DEBUG"
addopts = '''
--cov=tnt
 --color=yes
 --cov-report=term
 --log-cli-level=DEBUG
'''
pythonpath = [
  "src/pydenote"
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/pydenote/resources/__version__.py"

[tool.coverage.run]
omit = [
    "*/__*__.py"
]

[tool.coverage.report]
exclude_also = [
    "pragma: no cover",
    "if __name__ == .__main__.:"
]


[tool.mypy]
strict = true
